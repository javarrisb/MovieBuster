"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createSchema = void 0;
const apollo_server_express_1 = require("apollo-server-express");
const GraphQLJSON = require("graphql-type-json");
const events_1 = require("events");
function createFromServices(rootSchema, services) {
    const schemas = services.map(m => m.schema);
    schemas.splice(0, 0, rootSchema);
    return (0, apollo_server_express_1.mergeSchemas)({
        schemas,
    });
}
function createSchema(services) {
    const events = new events_1.EventEmitter();
    const rootSchema = (0, apollo_server_express_1.makeExecutableSchema)({
        typeDefs: `
      scalar JSON
      scalar Upload

      type Query {
        _: Boolean
      }

      type Mutation {
        _: Boolean
      }

      type Subscription {
        _: Boolean
      }

      schema {
        query: Query
        mutation: Mutation
        subscription: Subscription
      }
    `,
        resolvers: {
            Query: {},
            Mutation: {},
            Subscription: {},
            JSON: GraphQLJSON,
        },
    });
    let executableSchema = createFromServices(rootSchema, services);
    return {
        update(services) {
            executableSchema = createFromServices(rootSchema, services);
            events.emit('updated');
        },
        onUpdate(cb) {
            const listener = () => cb(executableSchema);
            events.addListener('updated', listener);
            return () => events.removeListener('updated', listener);
        },
        get() {
            return executableSchema;
        },
    };
}
exports.createSchema = createSchema;
//# sourceMappingURL=schema.js.map