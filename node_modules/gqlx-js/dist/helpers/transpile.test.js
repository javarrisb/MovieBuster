"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const transpile_1 = require("./transpile");
describe('transpileNode', () => {
    it('serializes a simple addition correctly', () => {
        const result = (0, transpile_1.transpileNode)({
            type: 'BinaryExpression',
            left: {
                type: 'Identifier',
                name: 'a',
            },
            right: {
                type: 'Identifier',
                name: 'b',
            },
            operator: '+',
        }, [], ['a'], []);
        expect(result).toBe('($data.a + b)');
    });
    it('serializes a function call correctly', () => {
        const result = (0, transpile_1.transpileNode)({
            type: 'CallExpression',
            callee: {
                type: 'Identifier',
                name: 'f',
            },
            optional: false,
            arguments: [
                {
                    type: 'Identifier',
                    name: 'a',
                },
                {
                    type: 'Literal',
                    raw: '10',
                    value: 10,
                },
            ],
        }, [], ['a'], []);
        expect(result).toBe('f($data.a, 10)');
    });
});
//# sourceMappingURL=transpile.test.js.map